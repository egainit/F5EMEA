{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
    "contentVersion": "3.1.3.0",
    "parameters": {
        "adminUsername": {
            "defaultValue": "netadmin",
            "metadata": {
                "description": "User name for the Virtual Machine."
            },
            "type": "string"
        },
        "adminPassword": {
            "defaultValue": "password@123456789",		
            "metadata": {
                "description": "Password to login to the Virtual Machine."
            },
            "type": "securestring"
        },
        "dnsLabel": {
            "defaultValue": "azneextlb01",
            "metadata": {
                "description": "Unique DNS Name for the Public IP address used to access the Virtual Machine"
            },
            "type": "string"
        },
        "dnsLabelPrefix": {
            "defaultValue": "azneextlb01",
            "metadata": {
                "description": "Unique DNS Name prefix for the Public IP address(es) used to access the data plan for application traffic objects (such as virtual servers and pools)."
            },
            "type": "string"
        },
        "instanceName": {
            "defaultValue": "AZNEEXTLB01",
            "metadata": {
                "description": "Name of the Virtual Machine."
            },
            "type": "string"
        },
        "instanceType": {
            "allowedValues": [
                "Standard_A3",
                "Standard_A4",
                "Standard_A5",
                "Standard_A6",
                "Standard_A7",
                "Standard_A8",
                "Standard_A9",
                "Standard_D3",
                "Standard_D4",
                "Standard_D11",
                "Standard_D12",
                "Standard_D13",
                "Standard_D14",
                "Standard_D3_v2",
                "Standard_D4_v2",
                "Standard_D5_v2",
                "Standard_D11_v2",
                "Standard_D12_v2",
                "Standard_D13_v2",
                "Standard_D14_v2",
                "Standard_D15_v2",
                "Standard_F4",
                "Standard_F8"
            ],
            "defaultValue": "Standard_F4",
            "metadata": {
                "description": "Azure instance size of the Virtual Machine."
            },
            "type": "string"
        },
        "imageName": {
            "allowedValues": [
                "Good",
                "Better",
                "Best"
            ],
            "defaultValue": "Good",
            "metadata": {
                "description": "F5 SKU (IMAGE) to you want to deploy."
            },
            "type": "string"
        },
        "bigIpVersion": {
            "allowedValues": [
                "latest",
                "13.0.021",
                "12.1.24"
            ],
            "defaultValue": "13.0.021",
            "metadata": {
                "description": "F5 BIG-IP version you want to use."
            },
            "type": "string"
        },
        "licensedBandwidth": {
            "allowedValues": [
                "25m",
                "200m",
                "1g"
            ],
            "defaultValue": "200m",
            "metadata": {
                "description": "The amount of licensed bandwidth (Mbps) you want the PAYG image to use."
            },
            "type": "string"
        },
        "numberOfExternalIps": {
            "allowedValues": [
                1,
                2,
                3,
                4,
                5,
                10,
                15,
                25,
                50

            ],
            "defaultValue": 10,
            "metadata": {
                "description": "The number of public/private IP addresses you want to deploy for the application traffic (external) NIC on the BIG-IP VE to be used for virtual servers."
            },
            "type": "int"
        },
        "vnetAddressPrefix": {
            "defaultValue": "10.56",
            "metadata": {
                "description": "The start of the CIDR block the BIG-IP VEs use when creating the Vnet and subnets.  You MUST type just the first two octets of the /16 virtual network that will be created, for example '10.0', '10.100', 192.168'."
            },
            "type": "string"
        },
        "restrictedSrcAddress": {
            "defaultValue": "140.89.0.0/16",
            "metadata": {
                "description": "This field restricts management access to a specific network or address. Enter an IP address or address range in CIDR notation, or asterisk for all sources"
            },
            "type": "string"
        },
        "tagValues": {
            "defaultValue": {
                "application": "APP",
                "cost": "COST",
                "environment": "ENV",
                "group": "GROUP",
                "owner": "OWNER"
            },
            "type": "object"
        }
    },
    "variables": {
        "bigIpNicPortMap": {
            "1": {
                "Port": "[parameters('bigIpVersion')]"
            },
            "2": {
                "Port": "443"
            },
            "3": {
                "Port": "443"
            },
            "4": {
                "Port": "443"
            },
            "5": {
                "Port": "443"
            },
            "6": {
                "Port": "443"
            }
        },
        "bigIpVersionPortMap": {
            "12.1.24": {
                "Port": 443
            },
            "13.0.021": {
                "Port": 8443
            },
            "443": {
                "Port": 443
            },
            "latest": {
                "Port": 8443
            }
        },
        "apiVersion": "2015-06-15",
        "computeApiVersion": "2015-06-15",
        "networkApiVersion": "2015-06-15",
        "storageApiVersion": "2015-06-15",
        "location": "[resourceGroup().location]",
        "singleQuote": "'",
        "f5CloudLibsTag": "v3.0.2",
        "verifyHash": "[concat(variables('singleQuote'), 'cli script /Common/verifyHash {\nproc script::run {} {\n        if {[catch {\n            set hashes(f5-cloud-libs.tar.gz) 862f7c19396088ab012fda7c2b262621c17f134b1d39d7a4d0b765eaf92f3ddc7354716a4f546fabb866df9876e1baed5799ae4a2c9d0ea6f01f79a38b9d3b3e\n            set hashes(f5-cloud-libs-aws.tar.gz) 2566f515fb46d89f5a245079b0efdad60fd78327c352e567bd5d573eb2ee0093d167a2f054b2408bd7df49c5debc4218074fdb50cfe135bb80ccc6c303a03f72\n            set hashes(f5-cloud-libs-azure.tar.gz) 80fbf43a29924e3f10dd1187fd6795083363eb9d65214c24f76c33e0465f82435bb84a131f9cd5b647677c9e4353f446d75566da811110cd587ede2d68206604\n            set hashes(asm-policy-linux.tar.gz) 63b5c2a51ca09c43bd89af3773bbab87c71a6e7f6ad9410b229b4e0a1c483d46f1a9fff39d9944041b02ee9260724027414de592e99f4c2475415323e18a72e0\n            set hashes(f5.http.v1.2.0rc4.tmpl) 47c19a83ebfc7bd1e9e9c35f3424945ef8694aa437eedd17b6a387788d4db1396fefe445199b497064d76967b0d50238154190ca0bd73941298fc257df4dc034\n            set hashes(f5.http.v1.2.0rc6.tmpl) 811b14bffaab5ed0365f0106bb5ce5e4ec22385655ea3ac04de2a39bd9944f51e3714619dae7ca43662c956b5212228858f0592672a2579d4a87769186e2cbfe\n            set hashes(f5.http.v1.2.0rc7.tmpl) 21f413342e9a7a281a0f0e1301e745aa86af21a697d2e6fdc21dd279734936631e92f34bf1c2d2504c201f56ccd75c5c13baa2fe7653213689ec3c9e27dff77d\n            set hashes(f5.aws_advanced_ha.v1.3.0rc1.tmpl) 9e55149c010c1d395abdae3c3d2cb83ec13d31ed39424695e88680cf3ed5a013d626b326711d3d40ef2df46b72d414b4cb8e4f445ea0738dcbd25c4c843ac39d\n            set hashes(f5.aws_advanced_ha.v1.4.0rc1.tmpl) de068455257412a949f1eadccaee8506347e04fd69bfb645001b76f200127668e4a06be2bbb94e10fefc215cfc3665b07945e6d733cbe1a4fa1b88e881590396\n            set hashes(asm-policy.tar.gz) 2d39ec60d006d05d8a1567a1d8aae722419e8b062ad77d6d9a31652971e5e67bc4043d81671ba2a8b12dd229ea46d205144f75374ed4cae58cefa8f9ab6533e6\n            set hashes(deploy_waf.sh) 4db3176b45913a5e7ccf42ab9c7ac9d7de115cdbd030b9e735946f92456b6eb433087ed0e98ac4981c76d475cd38f4de49cd98c063e13d50328a270e5b3daa4a\n            set hashes(f5.policy_creator.tmpl) 54d265e0a573d3ae99864adf4e054b293644e48a54de1e19e8a6826aa32ab03bd04c7255fd9c980c3673e9cd326b0ced513665a91367add1866875e5ef3c4e3a\n\n            set file_path [lindex $tmsh::argv 1]\n            set file_name [file tail $file_path]\n\n            if {![info exists hashes($file_name)]} {\n                tmsh::log err \"No hash found for $file_name\"\n                exit 1\n            }\n\n            set expected_hash $hashes($file_name)\n            set computed_hash [lindex [exec /usr/bin/openssl dgst -r -sha512 $file_path] 0]\n            if { $expected_hash eq $computed_hash } {\n                exit 0\n            }\n            tmsh::log err \"Hash does not match for $file_path\"\n            exit 1\n        }]} {\n            tmsh::log err {Unexpected error in verifyHash}\n            exit 1\n        }\n    }\n    script-signature ae3RGP+3LP22Pv3aAEHQys7W1K0ZtyXF+wrdn0zfyJRq6tsOP9Am3h7RBoihmGd4xl5lh8uoT9cCYnNWl/P0BI0vE2RY5vI5M/PNlIUT3AezrTxDXZYPB3qwgQOUqgcj09SofM0KHSE5RN3nnUMrpPvlt9PfPWqmje185j+XyfLptIyB45fFzFiBsvkDrd4MF6oJUIhYYTC4jmgXWtROyXNzXsfqd+2H7diIr99o90drNvwPjiArGJg6kXVvm2JLWm0BqNiQBrqwZdEu44a6inzMQ7HDtbGEPMVVh2VtXD3KsL1TBAN/aTMuduVHMxzLpxVXR2L2IQV1vw9R/Pk9QQ==\n    signing-key /Common/f5-irule\n}', variables('singleQuote'))]",
        "installCloudLibs": "[concat(variables('singleQuote'), '#!/bin/bash\necho about to execute\nchecks=0\nwhile [ $checks -lt 120 ]; do echo checking mcpd\n/usr/bin/tmsh -a show sys mcp-state field-fmt | grep -q running\nif [ $? == 0 ]; then\necho mcpd ready\nbreak\nfi\necho mcpd not ready yet\nlet checks=checks+1\nsleep 1\ndone\necho loading verifyHash script\n/usr/bin/tmsh load sys config merge file /config/verifyHash\nif [ $? != 0 ]; then\necho cannot validate signature of /config/verifyHash\nexit\nfi\necho loaded verifyHash\nscript_loc=\"/var/lib/waagent/custom-script/download/0/\"\nconfig_loc=\"/config/cloud/\"\nhashed_file_list=\"${config_loc}f5-cloud-libs.tar.gz\"\nfor file in $hashed_file_list; do\necho \"verifying $file\"\n/usr/bin/tmsh run cli script verifyHash $file\nif [ $? != 0 ]; then\necho \"$file is not valid\"\nexit 1\nfi\necho \"verified $file\"\ndone\necho \"expanding $hashed_file_list\"\ntar xvfz /config/cloud/f5-cloud-libs.tar.gz -C /config/cloud/node_modules\ntouch /config/cloud/cloudLibsReady', variables('singleQuote'))]",
        "newStorageAccountName": "azneextlb01",
        "storageAccountType": "Standard_LRS",
        "dnsLabel": "[toLower(parameters('dnsLabel'))]",
        "imageNameToLower": "[toLower(parameters('imageName'))]",
        "skuToUse": "[concat('f5-bigip-virtual-edition-', variables('imageNameToLower'),'-byol')]",
        "offerToUse": "f5-big-ip",
        "bigIpNicPortValue": "[variables('bigIpNicPortMap')['3'].Port]",
        "bigIpMgmtPort": "[variables('bigIpVersionPortMap')[variables('bigIpNicPortValue')].Port]",
        "availabilitySetName": "[concat(variables('dnsLabel'), '-avset')]",
        "nicName": "[concat(variables('dnsLabel'), '-mgmt0')]",
        "virtualNetworkName": "EMEA_ECV1ECV2_56.0",
        "vnetId": "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]",
        "vnetAddressPrefix": "[concat(parameters('vnetAddressPrefix'),'.0.0/22')]",
        "nsgID": "[resourceId('Microsoft.Network/networkSecurityGroups/',concat(variables('dnsLabel'),'-nsg'))]",
        "publicIPAddressName": "[concat(variables('dnsLabel'), '-mgmt-pip')]",
        "publicIPAddressId": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))]",
        "publicIPAddressType": "Static",
        "subnetName": "EMEA_ECV1ECV2_DMZMGT_56.0",
        "subnetId": "[concat(variables('vnetId'), '/subnets/', variables('subnetName'))]",
        "subnetPrefix": "[concat(parameters('vnetAddressPrefix'), '.0.0/24')]",
        "subnetPrivateAddress": "[concat(parameters('vnetAddressPrefix'), '.0.4')]",
        "instanceName": "[toLower(parameters('instanceName'))]",
        "dnsLabelPrefix": "[toLower(parameters('dnsLabelPrefix'))]",
        "nsg2ID": "[resourceId('Microsoft.Network/networkSecurityGroups/',concat(variables('dnsLabel'),'-nsg2'))]",
        "publicIPAddressNamePrefix": "[concat(variables('dnsLabel'), '-ext-pip')]",
        "publicIPAddressIdPrefix": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressNamePrefix'))]",
        "extNicName": "[concat(variables('dnsLabel'), '-ext0')]",
        "extSubnetName": "EMEA_ECV1ECV2_DMZEXT_56.1",
        "extSubnetId": "[concat(variables('vnetId'), '/subnets/', variables('extsubnetName'))]",
        "extSubnetPrefix": "[concat(parameters('vnetAddressPrefix'), '.1.0/24')]",
        "extSubnetPrivateAddress": "[concat(parameters('vnetAddressPrefix'), '.1.4')]",
        "extSubnetPrivateAddressPrefix": "[concat(parameters('vnetAddressPrefix'), '.1.')]",
        "intNicName": "[concat(variables('dnsLabel'), '-int0')]",
        "intSubnetName": "EMEA_ECV1ECV2_DMZINT_56.2",
        "intSubnetId": "[concat(variables('vnetId'), '/subnets/', variables('intsubnetName'))]",
        "intSubnetPrefix": "[concat(parameters('vnetAddressPrefix'), '.2.0/24')]",
        "intSubnetPrivateAdress": "[concat(parameters('vnetAddressPrefix'), '.2.4')]",
        "numberOfExternalIps": "[add(parameters('numberOfExternalIps'), 1)]",
        "ipconfigArray": [
            {
                "name": "[concat(variables('instanceName'), '-ipconfig1')]",
                "properties": {
                    "PublicIpAddress": {
                        "Id": "[concat(variables('publicIPAddressIdPrefix'), 2)]"
                    },
                    "primary": true,
                    "privateIPAddress": "[variables('extSubnetPrivateAddress')]",
                    "privateIPAllocationMethod": "Static",
                    "subnet": {
                        "id": "[variables('extSubnetId')]"
                    }
                }
            },
            {
                "name": "[concat(variables('instanceName'), '-ipconfig2')]",
                "properties": {
                    "PublicIpAddress": {
                        "Id": "[concat(variables('publicIPAddressIdPrefix'), 3)]"
                    },
                    "primary": false,
                    "privateIPAddress": "[concat(variables('extSubnetPrivateAddressPrefix'), 5)]",
                    "privateIPAllocationMethod": "Static",
                    "subnet": {
                        "id": "[variables('extSubnetId')]"
                    }
                }
            },
            {
                "name": "[concat(variables('instanceName'), '-ipconfig3')]",
                "properties": {
                    "PublicIpAddress": {
                        "Id": "[concat(variables('publicIPAddressIdPrefix'), 4)]"
                    },
                    "primary": false,
                    "privateIPAddress": "[concat(variables('extSubnetPrivateAddressPrefix'), 6)]",
                    "privateIPAllocationMethod": "Static",
                    "subnet": {
                        "id": "[variables('extSubnetId')]"
                    }
                }
            },
            {
                "name": "[concat(variables('instanceName'), '-ipconfig4')]",
                "properties": {
                    "PublicIpAddress": {
                        "Id": "[concat(variables('publicIPAddressIdPrefix'), 5)]"
                    },
                    "primary": false,
                    "privateIPAddress": "[concat(variables('extSubnetPrivateAddressPrefix'), 7)]",
                    "privateIPAllocationMethod": "Static",
                    "subnet": {
                        "id": "[variables('extSubnetId')]"
                    }
                }
            },
            {
                "name": "[concat(variables('instanceName'), '-ipconfig5')]",
                "properties": {
                    "PublicIpAddress": {
                        "Id": "[concat(variables('publicIPAddressIdPrefix'), 6)]"
                    },
                    "primary": false,
                    "privateIPAddress": "[concat(variables('extSubnetPrivateAddressPrefix'), 8)]",
                    "privateIPAllocationMethod": "Static",
                    "subnet": {
                        "id": "[variables('extSubnetId')]"
                    }
                }
            },
            {
                "name": "[concat(variables('instanceName'), '-ipconfig6')]",
                "properties": {
                    "PublicIpAddress": {
                        "Id": "[concat(variables('publicIPAddressIdPrefix'), 7)]"
                    },
                    "primary": false,
                    "privateIPAddress": "[concat(variables('extSubnetPrivateAddressPrefix'), 9)]",
                    "privateIPAllocationMethod": "Static",
                    "subnet": {
                        "id": "[variables('extSubnetId')]"
                    }
                }
            },
            {
                "name": "[concat(variables('instanceName'), '-ipconfig7')]",
                "properties": {
                    "PublicIpAddress": {
                        "Id": "[concat(variables('publicIPAddressIdPrefix'), 8)]"
                    },
                    "primary": false,
                    "privateIPAddress": "[concat(variables('extSubnetPrivateAddressPrefix'), 10)]",
                    "privateIPAllocationMethod": "Static",
                    "subnet": {
                        "id": "[variables('extSubnetId')]"
                    }
                }
            },
            {
                "name": "[concat(variables('instanceName'), '-ipconfig8')]",
                "properties": {
                    "PublicIpAddress": {
                        "Id": "[concat(variables('publicIPAddressIdPrefix'), 9)]"
                    },
                    "primary": false,
                    "privateIPAddress": "[concat(variables('extSubnetPrivateAddressPrefix'), 11)]",
                    "privateIPAllocationMethod": "Static",
                    "subnet": {
                        "id": "[variables('extSubnetId')]"
                    }
                }
            },
            {
                "name": "[concat(variables('instanceName'), '-ipconfig9')]",
                "properties": {
                    "PublicIpAddress": {
                        "Id": "[concat(variables('publicIPAddressIdPrefix'), 10)]"
                    },
                    "primary": false,
                    "privateIPAddress": "[concat(variables('extSubnetPrivateAddressPrefix'), 12)]",
                    "privateIPAllocationMethod": "Static",
                    "subnet": {
                        "id": "[variables('extSubnetId')]"
                    }
                }
            },
            {
                "name": "[concat(variables('instanceName'), '-ipconfig10')]",
                "properties": {
                    "PublicIpAddress": {
                        "Id": "[concat(variables('publicIPAddressIdPrefix'), 11)]"
                    },
                    "primary": false,
                    "privateIPAddress": "[concat(variables('extSubnetPrivateAddressPrefix'), 13)]",
                    "privateIPAllocationMethod": "Static",
                    "subnet": {
                        "id": "[variables('extSubnetId')]"
                    }
                }
            },
            {
                "name": "[concat(variables('instanceName'), '-ipconfig11')]",
                "properties": {
                    "PublicIpAddress": {
                        "Id": "[concat(variables('publicIPAddressIdPrefix'), 12)]"
                    },
                    "primary": false,
                    "privateIPAddress": "[concat(variables('extSubnetPrivateAddressPrefix'), 14)]",
                    "privateIPAllocationMethod": "Static",
                    "subnet": {
                        "id": "[variables('extSubnetId')]"
                    }
                }
            },
            {
                "name": "[concat(variables('instanceName'), '-ipconfig12')]",
                "properties": {
                    "PublicIpAddress": {
                        "Id": "[concat(variables('publicIPAddressIdPrefix'), 13)]"
                    },
                    "primary": false,
                    "privateIPAddress": "[concat(variables('extSubnetPrivateAddressPrefix'), 15)]",
                    "privateIPAllocationMethod": "Static",
                    "subnet": {
                        "id": "[variables('extSubnetId')]"
                    }
                }
            },
            {
                "name": "[concat(variables('instanceName'), '-ipconfig13')]",
                "properties": {
                    "PublicIpAddress": {
                        "Id": "[concat(variables('publicIPAddressIdPrefix'), 14)]"
                    },
                    "primary": false,
                    "privateIPAddress": "[concat(variables('extSubnetPrivateAddressPrefix'), 16)]",
                    "privateIPAllocationMethod": "Static",
                    "subnet": {
                        "id": "[variables('extSubnetId')]"
                    }
                }
            },
            {
                "name": "[concat(variables('instanceName'), '-ipconfig14')]",
                "properties": {
                    "PublicIpAddress": {
                        "Id": "[concat(variables('publicIPAddressIdPrefix'), 15)]"
                    },
                    "primary": false,
                    "privateIPAddress": "[concat(variables('extSubnetPrivateAddressPrefix'), 17)]",
                    "privateIPAllocationMethod": "Static",
                    "subnet": {
                        "id": "[variables('extSubnetId')]"
                    }
                }
            },
            {
                "name": "[concat(variables('instanceName'), '-ipconfig15')]",
                "properties": {
                    "PublicIpAddress": {
                        "Id": "[concat(variables('publicIPAddressIdPrefix'), 16)]"
                    },
                    "primary": false,
                    "privateIPAddress": "[concat(variables('extSubnetPrivateAddressPrefix'), 18)]",
                    "privateIPAllocationMethod": "Static",
                    "subnet": {
                        "id": "[variables('extSubnetId')]"
                    }
                }
            },
            {
                "name": "[concat(variables('instanceName'), '-ipconfig16')]",
                "properties": {
                    "PublicIpAddress": {
                        "Id": "[concat(variables('publicIPAddressIdPrefix'), 17)]"
                    },
                    "primary": false,
                    "privateIPAddress": "[concat(variables('extSubnetPrivateAddressPrefix'), 19)]",
                    "privateIPAllocationMethod": "Static",
                    "subnet": {
                        "id": "[variables('extSubnetId')]"
                    }
                }
            },
            {
                "name": "[concat(variables('instanceName'), '-ipconfig17')]",
                "properties": {
                    "PublicIpAddress": {
                        "Id": "[concat(variables('publicIPAddressIdPrefix'), 18)]"
                    },
                    "primary": false,
                    "privateIPAddress": "[concat(variables('extSubnetPrivateAddressPrefix'), 20)]",
                    "privateIPAllocationMethod": "Static",
                    "subnet": {
                        "id": "[variables('extSubnetId')]"
                    }
                }
            },
            {
                "name": "[concat(variables('instanceName'), '-ipconfig18')]",
                "properties": {
                    "PublicIpAddress": {
                        "Id": "[concat(variables('publicIPAddressIdPrefix'), 19)]"
                    },
                    "primary": false,
                    "privateIPAddress": "[concat(variables('extSubnetPrivateAddressPrefix'), 21)]",
                    "privateIPAllocationMethod": "Static",
                    "subnet": {
                        "id": "[variables('extSubnetId')]"
                    }
                }
            },
            {
                "name": "[concat(variables('instanceName'), '-ipconfig19')]",
                "properties": {
                    "PublicIpAddress": {
                        "Id": "[concat(variables('publicIPAddressIdPrefix'), 20)]"
                    },
                    "primary": false,
                    "privateIPAddress": "[concat(variables('extSubnetPrivateAddressPrefix'), 22)]",
                    "privateIPAllocationMethod": "Static",
                    "subnet": {
                        "id": "[variables('extSubnetId')]"
                    }
                }
            },
            {
                "name": "[concat(variables('instanceName'), '-ipconfig20')]",
                "properties": {
                    "PublicIpAddress": {
                        "Id": "[concat(variables('publicIPAddressIdPrefix'), 21)]"
                    },
                    "primary": false,
                    "privateIPAddress": "[concat(variables('extSubnetPrivateAddressPrefix'), 23)]",
                    "privateIPAllocationMethod": "Static",
                    "subnet": {
                        "id": "[variables('extSubnetId')]"
                    }
                }
            },
            {
                "name": "[concat(variables('instanceName'), '-ipconfig21')]",
                "properties": {
                    "PublicIpAddress": {
                        "Id": "[concat(variables('publicIPAddressIdPrefix'), 22)]"
                    },
                    "primary": false,
                    "privateIPAddress": "[concat(variables('extSubnetPrivateAddressPrefix'), 24)]",
                    "privateIPAllocationMethod": "Static",
                    "subnet": {
                        "id": "[variables('extSubnetId')]"
                    }
                }
            },
            {
                "name": "[concat(variables('instanceName'), '-ipconfig22')]",
                "properties": {
                    "PublicIpAddress": {
                        "Id": "[concat(variables('publicIPAddressIdPrefix'), 23)]"
                    },
                    "primary": false,
                    "privateIPAddress": "[concat(variables('extSubnetPrivateAddressPrefix'), 25)]",
                    "privateIPAllocationMethod": "Static",
                    "subnet": {
                        "id": "[variables('extSubnetId')]"
                    }
                }
            },
            {
                "name": "[concat(variables('instanceName'), '-ipconfig23')]",
                "properties": {
                    "PublicIpAddress": {
                        "Id": "[concat(variables('publicIPAddressIdPrefix'), 24)]"
                    },
                    "primary": false,
                    "privateIPAddress": "[concat(variables('extSubnetPrivateAddressPrefix'), 26)]",
                    "privateIPAllocationMethod": "Static",
                    "subnet": {
                        "id": "[variables('extSubnetId')]"
                    }
                }
            },
            {
                "name": "[concat(variables('instanceName'), '-ipconfig24')]",
                "properties": {
                    "PublicIpAddress": {
                        "Id": "[concat(variables('publicIPAddressIdPrefix'), 25)]"
                    },
                    "primary": false,
                    "privateIPAddress": "[concat(variables('extSubnetPrivateAddressPrefix'), 27)]",
                    "privateIPAllocationMethod": "Static",
                    "subnet": {
                        "id": "[variables('extSubnetId')]"
                    }
                }
            },
            {
                "name": "[concat(variables('instanceName'), '-ipconfig25')]",
                "properties": {
                    "PublicIpAddress": {
                        "Id": "[concat(variables('publicIPAddressIdPrefix'), 26)]"
                    },
                    "primary": false,
                    "privateIPAddress": "[concat(variables('extSubnetPrivateAddressPrefix'), 28)]",
                    "privateIPAllocationMethod": "Static",
                    "subnet": {
                        "id": "[variables('extSubnetId')]"
                    }
                }
            },
            {
                "name": "[concat(variables('instanceName'), '-ipconfig26')]",
                "properties": {
                    "PublicIpAddress": {
                        "Id": "[concat(variables('publicIPAddressIdPrefix'), 27)]"
                    },
                    "primary": false,
                    "privateIPAddress": "[concat(variables('extSubnetPrivateAddressPrefix'), 29)]",
                    "privateIPAllocationMethod": "Static",
                    "subnet": {
                        "id": "[variables('extSubnetId')]"
                    }
                }
            },
            {
                "name": "[concat(variables('instanceName'), '-ipconfig27')]",
                "properties": {
                    "PublicIpAddress": {
                        "Id": "[concat(variables('publicIPAddressIdPrefix'), 28)]"
                    },
                    "primary": false,
                    "privateIPAddress": "[concat(variables('extSubnetPrivateAddressPrefix'), 30)]",
                    "privateIPAllocationMethod": "Static",
                    "subnet": {
                        "id": "[variables('extSubnetId')]"
                    }
                }
            },
            {
                "name": "[concat(variables('instanceName'), '-ipconfig28')]",
                "properties": {
                    "PublicIpAddress": {
                        "Id": "[concat(variables('publicIPAddressIdPrefix'), 29)]"
                    },
                    "primary": false,
                    "privateIPAddress": "[concat(variables('extSubnetPrivateAddressPrefix'), 31)]",
                    "privateIPAllocationMethod": "Static",
                    "subnet": {
                        "id": "[variables('extSubnetId')]"
                    }
                }
            },
            {
                "name": "[concat(variables('instanceName'), '-ipconfig29')]",
                "properties": {
                    "PublicIpAddress": {
                        "Id": "[concat(variables('publicIPAddressIdPrefix'), 30)]"
                    },
                    "primary": false,
                    "privateIPAddress": "[concat(variables('extSubnetPrivateAddressPrefix'), 32)]",
                    "privateIPAllocationMethod": "Static",
                    "subnet": {
                        "id": "[variables('extSubnetId')]"
                    }
                }
            },
            {
                "name": "[concat(variables('instanceName'), '-ipconfig30')]",
                "properties": {
                    "PublicIpAddress": {
                        "Id": "[concat(variables('publicIPAddressIdPrefix'), 31)]"
                    },
                    "primary": false,
                    "privateIPAddress": "[concat(variables('extSubnetPrivateAddressPrefix'), 33)]",
                    "privateIPAllocationMethod": "Static",
                    "subnet": {
                        "id": "[variables('extSubnetId')]"
                    }
                }
            },
            {
                "name": "[concat(variables('instanceName'), '-ipconfig31')]",
                "properties": {
                    "PublicIpAddress": {
                        "Id": "[concat(variables('publicIPAddressIdPrefix'), 32)]"
                    },
                    "primary": false,
                    "privateIPAddress": "[concat(variables('extSubnetPrivateAddressPrefix'), 34)]",
                    "privateIPAllocationMethod": "Static",
                    "subnet": {
                        "id": "[variables('extSubnetId')]"
                    }
                }
            },
            {
                "name": "[concat(variables('instanceName'), '-ipconfig32')]",
                "properties": {
                    "PublicIpAddress": {
                        "Id": "[concat(variables('publicIPAddressIdPrefix'), 33)]"
                    },
                    "primary": false,
                    "privateIPAddress": "[concat(variables('extSubnetPrivateAddressPrefix'), 35)]",
                    "privateIPAllocationMethod": "Static",
                    "subnet": {
                        "id": "[variables('extSubnetId')]"
                    }
                }
            },
            {
                "name": "[concat(variables('instanceName'), '-ipconfig33')]",
                "properties": {
                    "PublicIpAddress": {
                        "Id": "[concat(variables('publicIPAddressIdPrefix'), 34)]"
                    },
                    "primary": false,
                    "privateIPAddress": "[concat(variables('extSubnetPrivateAddressPrefix'), 36)]",
                    "privateIPAllocationMethod": "Static",
                    "subnet": {
                        "id": "[variables('extSubnetId')]"
                    }
                }
            },
            {
                "name": "[concat(variables('instanceName'), '-ipconfig34')]",
                "properties": {
                    "PublicIpAddress": {
                        "Id": "[concat(variables('publicIPAddressIdPrefix'), 35)]"
                    },
                    "primary": false,
                    "privateIPAddress": "[concat(variables('extSubnetPrivateAddressPrefix'), 37)]",
                    "privateIPAllocationMethod": "Static",
                    "subnet": {
                        "id": "[variables('extSubnetId')]"
                    }
                }
            },
            {
                "name": "[concat(variables('instanceName'), '-ipconfig35')]",
                "properties": {
                    "PublicIpAddress": {
                        "Id": "[concat(variables('publicIPAddressIdPrefix'), 36)]"
                    },
                    "primary": false,
                    "privateIPAddress": "[concat(variables('extSubnetPrivateAddressPrefix'), 38)]",
                    "privateIPAllocationMethod": "Static",
                    "subnet": {
                        "id": "[variables('extSubnetId')]"
                    }
                }
            },
            {
                "name": "[concat(variables('instanceName'), '-ipconfig36')]",
                "properties": {
                    "PublicIpAddress": {
                        "Id": "[concat(variables('publicIPAddressIdPrefix'), 37)]"
                    },
                    "primary": false,
                    "privateIPAddress": "[concat(variables('extSubnetPrivateAddressPrefix'), 39)]",
                    "privateIPAllocationMethod": "Static",
                    "subnet": {
                        "id": "[variables('extSubnetId')]"
                    }
                }
            },
            {
                "name": "[concat(variables('instanceName'), '-ipconfig37')]",
                "properties": {
                    "PublicIpAddress": {
                        "Id": "[concat(variables('publicIPAddressIdPrefix'), 38)]"
                    },
                    "primary": false,
                    "privateIPAddress": "[concat(variables('extSubnetPrivateAddressPrefix'), 40)]",
                    "privateIPAllocationMethod": "Static",
                    "subnet": {
                        "id": "[variables('extSubnetId')]"
                    }
                }
            },
            {
                "name": "[concat(variables('instanceName'), '-ipconfig38')]",
                "properties": {
                    "PublicIpAddress": {
                        "Id": "[concat(variables('publicIPAddressIdPrefix'), 39)]"
                    },
                    "primary": false,
                    "privateIPAddress": "[concat(variables('extSubnetPrivateAddressPrefix'), 41)]",
                    "privateIPAllocationMethod": "Static",
                    "subnet": {
                        "id": "[variables('extSubnetId')]"
                    }
                }
            },
            {
                "name": "[concat(variables('instanceName'), '-ipconfig39')]",
                "properties": {
                    "PublicIpAddress": {
                        "Id": "[concat(variables('publicIPAddressIdPrefix'), 40)]"
                    },
                    "primary": false,
                    "privateIPAddress": "[concat(variables('extSubnetPrivateAddressPrefix'), 42)]",
                    "privateIPAllocationMethod": "Static",
                    "subnet": {
                        "id": "[variables('extSubnetId')]"
                    }
                }
            },
            {
                "name": "[concat(variables('instanceName'), '-ipconfig40')]",
                "properties": {
                    "PublicIpAddress": {
                        "Id": "[concat(variables('publicIPAddressIdPrefix'), 41)]"
                    },
                    "primary": false,
                    "privateIPAddress": "[concat(variables('extSubnetPrivateAddressPrefix'), 43)]",
                    "privateIPAllocationMethod": "Static",
                    "subnet": {
                        "id": "[variables('extSubnetId')]"
                    }
                }
            },
            {
                "name": "[concat(variables('instanceName'), '-ipconfig41')]",
                "properties": {
                    "PublicIpAddress": {
                        "Id": "[concat(variables('publicIPAddressIdPrefix'), 42)]"
                    },
                    "primary": false,
                    "privateIPAddress": "[concat(variables('extSubnetPrivateAddressPrefix'), 44)]",
                    "privateIPAllocationMethod": "Static",
                    "subnet": {
                        "id": "[variables('extSubnetId')]"
                    }
                }
            },
            {
                "name": "[concat(variables('instanceName'), '-ipconfig42')]",
                "properties": {
                    "PublicIpAddress": {
                        "Id": "[concat(variables('publicIPAddressIdPrefix'), 43)]"
                    },
                    "primary": false,
                    "privateIPAddress": "[concat(variables('extSubnetPrivateAddressPrefix'), 45)]",
                    "privateIPAllocationMethod": "Static",
                    "subnet": {
                        "id": "[variables('extSubnetId')]"
                    }
                }
            },
            {
                "name": "[concat(variables('instanceName'), '-ipconfig43')]",
                "properties": {
                    "PublicIpAddress": {
                        "Id": "[concat(variables('publicIPAddressIdPrefix'), 44)]"
                    },
                    "primary": false,
                    "privateIPAddress": "[concat(variables('extSubnetPrivateAddressPrefix'), 46)]",
                    "privateIPAllocationMethod": "Static",
                    "subnet": {
                        "id": "[variables('extSubnetId')]"
                    }
                }
            },
            {
                "name": "[concat(variables('instanceName'), '-ipconfig44')]",
                "properties": {
                    "PublicIpAddress": {
                        "Id": "[concat(variables('publicIPAddressIdPrefix'), 45)]"
                    },
                    "primary": false,
                    "privateIPAddress": "[concat(variables('extSubnetPrivateAddressPrefix'), 47)]",
                    "privateIPAllocationMethod": "Static",
                    "subnet": {
                        "id": "[variables('extSubnetId')]"
                    }
                }
            },
            {
                "name": "[concat(variables('instanceName'), '-ipconfig45')]",
                "properties": {
                    "PublicIpAddress": {
                        "Id": "[concat(variables('publicIPAddressIdPrefix'), 46)]"
                    },
                    "primary": false,
                    "privateIPAddress": "[concat(variables('extSubnetPrivateAddressPrefix'), 48)]",
                    "privateIPAllocationMethod": "Static",
                    "subnet": {
                        "id": "[variables('extSubnetId')]"
                    }
                }
            },
            {
                "name": "[concat(variables('instanceName'), '-ipconfig46')]",
                "properties": {
                    "PublicIpAddress": {
                        "Id": "[concat(variables('publicIPAddressIdPrefix'), 47)]"
                    },
                    "primary": false,
                    "privateIPAddress": "[concat(variables('extSubnetPrivateAddressPrefix'), 49)]",
                    "privateIPAllocationMethod": "Static",
                    "subnet": {
                        "id": "[variables('extSubnetId')]"
                    }
                }
            },
            {
                "name": "[concat(variables('instanceName'), '-ipconfig47')]",
                "properties": {
                    "PublicIpAddress": {
                        "Id": "[concat(variables('publicIPAddressIdPrefix'), 48)]"
                    },
                    "primary": false,
                    "privateIPAddress": "[concat(variables('extSubnetPrivateAddressPrefix'), 50)]",
                    "privateIPAllocationMethod": "Static",
                    "subnet": {
                        "id": "[variables('extSubnetId')]"
                    }
                }
            },
            {
                "name": "[concat(variables('instanceName'), '-ipconfig48')]",
                "properties": {
                    "PublicIpAddress": {
                        "Id": "[concat(variables('publicIPAddressIdPrefix'), 49)]"
                    },
                    "primary": false,
                    "privateIPAddress": "[concat(variables('extSubnetPrivateAddressPrefix'), 51)]",
                    "privateIPAllocationMethod": "Static",
                    "subnet": {
                        "id": "[variables('extSubnetId')]"
                    }
                }
            },
            {
                "name": "[concat(variables('instanceName'), '-ipconfig49')]",
                "properties": {
                    "PublicIpAddress": {
                        "Id": "[concat(variables('publicIPAddressIdPrefix'), 50)]"
                    },
                    "primary": false,
                    "privateIPAddress": "[concat(variables('extSubnetPrivateAddressPrefix'), 52)]",
                    "privateIPAllocationMethod": "Static",
                    "subnet": {
                        "id": "[variables('extSubnetId')]"
                    }
                }
            },
            {
                "name": "[concat(variables('instanceName'), '-ipconfig50')]",
                "properties": {
                    "PublicIpAddress": {
                        "Id": "[concat(variables('publicIPAddressIdPrefix'), 51)]"
                    },
                    "primary": false,
                    "privateIPAddress": "[concat(variables('extSubnetPrivateAddressPrefix'), 53)]",
                    "privateIPAllocationMethod": "Static",
                    "subnet": {
                        "id": "[variables('extSubnetId')]"
                    }
                }
            }
        ]
    },
    "resources": [
        {
            "apiVersion": "[variables('networkApiVersion')]",
            "location": "[variables('location')]",
            "name": "[variables('publicIPAddressName')]",
            "properties": {
                "dnsSettings": {
                    "domainNameLabel": "[variables('dnsLabel')]"
                },
                "idleTimeoutInMinutes": 30,
                "publicIPAllocationMethod": "[variables('publicIPAddressType')]"
            },
            "tags": {
                "application": "[parameters('tagValues').application]",
                "costCenter": "[parameters('tagValues').cost]",
                "environment": "[parameters('tagValues').environment]",
                "group": "[parameters('tagValues').group]",
                "owner": "[parameters('tagValues').owner]"
            },
            "type": "Microsoft.Network/publicIPAddresses"
        },
        {
            "apiVersion": "[variables('networkApiVersion')]",
            "copy": {
                "count": "[variables('numberOfExternalIps')]",
                "name": "pipcopy"
            },
            "location": "[variables('location')]",
            "name": "[concat(variables('publicIPAddressNamePrefix'), copyIndex(2))]",
            "properties": {
                "dnsSettings": {
                    "domainNameLabel": "[concat(variables('dnsLabelPrefix'), copyIndex(1))]"
                },
                "idleTimeoutInMinutes": 30,
                "publicIPAllocationMethod": "[variables('publicIPAddressType')]"
            },
            "tags": {
                "application": "[parameters('tagValues').application]",
                "costCenter": "[parameters('tagValues').cost]",
                "environment": "[parameters('tagValues').environment]",
                "group": "[parameters('tagValues').group]",
                "owner": "[parameters('tagValues').owner]"
            },
            "type": "Microsoft.Network/publicIPAddresses"
        },
        {
            "apiVersion": "[variables('apiVersion')]",
            "location": "[variables('location')]",
            "name": "[variables('virtualNetworkName')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('vnetAddressPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('subnetName')]",
                        "properties": {
                            "addressPrefix": "[variables('subnetPrefix')]"
                        }
                    },
                    {
                        "name": "[variables('extSubnetName')]",
                        "properties": {
                            "addressPrefix": "[variables('extSubnetPrefix')]"
                        }
                    },
                    {
                        "name": "[variables('intSubnetName')]",
                        "properties": {
                            "addressPrefix": "[variables('intSubnetPrefix')]"
                        }
                    }
                ]
            },
            "tags": {
                "application": "[parameters('tagValues').application]",
                "costCenter": "[parameters('tagValues').cost]",
                "environment": "[parameters('tagValues').environment]",
                "group": "[parameters('tagValues').group]",
                "owner": "[parameters('tagValues').owner]"
            },
            "type": "Microsoft.Network/virtualNetworks"
        },
        {
            "apiVersion": "[variables('apiVersion')]",
            "dependsOn": [
                "[variables('vnetId')]",
                "[variables('publicIPAddressId')]",
                "[variables('nsgID')]"
            ],
            "location": "[variables('location')]",
            "name": "[variables('nicName')]",
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "[concat(variables('instanceName'), '-ipconfig1')]",
                        "properties": {
                            "PublicIpAddress": {
                                "Id": "[variables('publicIPAddressId')]"
                            },
                            "privateIPAddress": "[variables('subnetPrivateAddress')]",
                            "privateIPAllocationMethod": "Static",
                            "subnet": {
                                "id": "[variables('subnetId')]"
                            }
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[variables('nsgID')]"
                }
            },
            "tags": {
                "application": "[parameters('tagValues').application]",
                "costCenter": "[parameters('tagValues').cost]",
                "environment": "[parameters('tagValues').environment]",
                "group": "[parameters('tagValues').group]",
                "owner": "[parameters('tagValues').owner]"
            },
            "type": "Microsoft.Network/networkInterfaces"
        },
        {
            "apiVersion": "[variables('apiVersion')]",
            "dependsOn": [
                "[variables('vnetId')]",
                "[concat(variables('nsg2ID'))]",
                "pipcopy"
            ],
            "location": "[variables('location')]",
            "name": "[variables('extNicName')]",
            "properties": {
                "ipConfigurations": "[take(variables('ipconfigArray'),variables('numberofExternalIps'))]",
                "networkSecurityGroup": {
                    "id": "[concat(variables('nsg2ID'))]"
                }
            },
            "tags": {
                "application": "[parameters('tagValues').application]",
                "costCenter": "[parameters('tagValues').cost]",
                "environment": "[parameters('tagValues').environment]",
                "group": "[parameters('tagValues').group]",
                "owner": "[parameters('tagValues').owner]"
            },
            "type": "Microsoft.Network/networkInterfaces"
        },
        {
            "apiVersion": "[variables('apiVersion')]",
            "dependsOn": [
                "[variables('vnetId')]",
                "[concat(variables('nsg2ID'))]",
                "pipcopy"
            ],
            "location": "[variables('location')]",
            "name": "[variables('intNicName')]",
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "[concat(variables('instanceName'), '-ipconfig1')]",
                        "properties": {
                            "privateIPAddress": "[variables('intSubnetPrivateAdress')]",
                            "privateIPAllocationMethod": "Static",
                            "subnet": {
                                "id": "[variables('intSubnetId')]"
                            }
                        }
                    }
                ]
            },
            "tags": {
                "application": "[parameters('tagValues').application]",
                "costCenter": "[parameters('tagValues').cost]",
                "environment": "[parameters('tagValues').environment]",
                "group": "[parameters('tagValues').group]",
                "owner": "[parameters('tagValues').owner]"
            },
            "type": "Microsoft.Network/networkInterfaces"
        },
        {
            "apiVersion": "[variables('apiVersion')]",
            "location": "[variables('location')]",
            "name": "[concat(variables('dnsLabel'), '-nsg')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "mgmt_allow_https",
                        "properties": {
                            "access": "Allow",
                            "description": "",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "[variables('bigIpMgmtPort')]",
                            "direction": "Inbound",
                            "priority": 101,
                            "protocol": "TCP",
                            "sourceAddressPrefix": "[parameters('restrictedSrcAddress')]",
                            "sourcePortRange": "*"
                        }
                    },
                    {
                        "name": "ssh_allow_22",
                        "properties": {
                            "access": "Allow",
                            "description": "",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "22",
                            "direction": "Inbound",
                            "priority": 102,
                            "protocol": "TCP",
                            "sourceAddressPrefix": "[parameters('restrictedSrcAddress')]",
                            "sourcePortRange": "*"
                        }
                    }
                ]
            },
            "tags": {
                "application": "[parameters('tagValues').application]",
                "costCenter": "[parameters('tagValues').cost]",
                "environment": "[parameters('tagValues').environment]",
                "group": "[parameters('tagValues').group]",
                "owner": "[parameters('tagValues').owner]"
            },
            "type": "Microsoft.Network/networkSecurityGroups"
        },
        {
            "apiVersion": "[variables('apiVersion')]",
            "location": "[variables('location')]",
            "name": "[concat(variables('dnsLabel'), '-nsg2')]",
            "properties": {
                "securityRules": ""
            },
            "tags": {
                "application": "[parameters('tagValues').application]",
                "costCenter": "[parameters('tagValues').cost]",
                "environment": "[parameters('tagValues').environment]",
                "group": "[parameters('tagValues').group]",
                "owner": "[parameters('tagValues').owner]"
            },
            "type": "Microsoft.Network/networkSecurityGroups"
        },
        {
            "apiVersion": "[variables('apiVersion')]",
            "location": "[variables('location')]",
            "name": "[variables('availabilitySetName')]",
            "tags": {
                "application": "[parameters('tagValues').application]",
                "costCenter": "[parameters('tagValues').cost]",
                "environment": "[parameters('tagValues').environment]",
                "group": "[parameters('tagValues').group]",
                "owner": "[parameters('tagValues').owner]"
            },
            "type": "Microsoft.Compute/availabilitySets"
        },
        {
            "apiVersion": "[variables('storageApiVersion')]",
            "location": "[variables('location')]",
            "name": "[variables('newStorageAccountName')]",
            "properties": {
                "accountType": "[variables('storageAccountType')]"
            },
            "tags": {
                "application": "[parameters('tagValues').application]",
                "costCenter": "[parameters('tagValues').cost]",
                "environment": "[parameters('tagValues').environment]",
                "group": "[parameters('tagValues').group]",
                "owner": "[parameters('tagValues').owner]"
            },
            "type": "Microsoft.Storage/storageAccounts"
        },
        {
            "apiVersion": "[variables('apiVersion')]",
            "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/', variables('newStorageAccountName'))]",
                "[concat('Microsoft.Compute/availabilitySets/', variables('availabilitySetName'))]",
                "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]",
                "[concat('Microsoft.Network/networkInterfaces/', variables('extNicName'))]",
                "[concat('Microsoft.Network/networkInterfaces/', variables('intNicName'))]"
            ],
            "location": "[variables('location')]",
            "name": "[variables('instanceName')]",
            "plan": {
                "name": "[variables('skuToUse')]",
                "product": "[variables('offerToUse')]",
                "publisher": "f5-networks"
            },
            "properties": {
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('availabilitySetName'))]"
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[concat('http://',variables('newStorageAccountName'),'.blob.core.windows.net')]"
                    }
                },
                "hardwareProfile": {
                    "vmSize": "[parameters('instanceType')]"
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]",
                            "properties": {
                                "primary": true
                            }
                        },
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('extNicName'))]",
                            "properties": {
                                "primary": false
                            }
                        },
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('intNicName'))]",
                            "properties": {
                                "primary": false
                            }
                        }
                    ]
                },
                "osProfile": {
                    "adminPassword": "[parameters('adminPassword')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "computerName": "[variables('instanceName')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "offer": "[variables('offerToUse')]",
                        "publisher": "f5-networks",
                        "sku": "[variables('skuToUse')]",
                        "version": "[parameters('bigIpVersion')]"
                    },
                    "osDisk": {
                        "caching": "ReadWrite",
                        "createOption": "FromImage",
                        "name": "osdisk",
                        "vhd": {
                            "uri": "[concat('http://',variables('newStorageAccountName'), '.blob.core.windows.net/vhds/', variables('instanceName'), '.vhd')]"
                        }
                    }
                }
            },
            "tags": {
                "application": "[parameters('tagValues').application]",
                "costCenter": "[parameters('tagValues').cost]",
                "environment": "[parameters('tagValues').environment]",
                "group": "[parameters('tagValues').group]",
                "owner": "[parameters('tagValues').owner]"
            },
            "type": "Microsoft.Compute/virtualMachines"
        },
        {
            "apiVersion": "2016-03-30",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', variables('instanceName'))]"
            ],
            "location": "[variables('location')]",
            "name": "[concat(variables('instanceName'),'/start')]",
            "properties": {
                "protectedSettings": {
                    "commandToExecute": "[concat('mkdir /config/cloud && cp f5-cloud-libs.tar.gz* /config/cloud; mkdir -p /config/cloud/node_modules; BIG_IP_CREDENTIALS_FILE=/config/cloud/passwd; /usr/bin/install -b -m 755 /dev/null /config/verifyHash; /usr/bin/install -b -m 755 /dev/null /config/installCloudLibs.sh; /usr/bin/install -b -m 400 /dev/null $BIG_IP_CREDENTIALS_FILE; IFS=', variables('singleQuote'), '%', variables('singleQuote'), '; echo -e ', variables('verifyHash'), ' >> /config/verifyHash; echo -e ', variables('installCloudLibs'), ' >> /config/installCloudLibs.sh; echo ', variables('singleQuote'), parameters('adminPassword'), variables('singleQuote'), ' >> $BIG_IP_CREDENTIALS_FILE; unset IFS; bash /config/installCloudLibs.sh; /usr/bin/f5-rest-node /config/cloud/node_modules/f5-cloud-libs/scripts/onboard.js --output /var/log/onboard.log --log-level debug --host ', variables('subnetPrivateAddress'), ' --ssl-port ', variables('bigIpMgmtPort'), ' -u admin --password-url file:///config/cloud/passwd --hostname ', concat(variables('instanceName'), '.', resourceGroup().location, '.cloudapp.azure.com'),  ' --ntp pool.ntp.org --db tmm.maxremoteloglength:2048 --module ltm:nominal --module afm:none; /usr/bin/f5-rest-node /config/cloud/node_modules/f5-cloud-libs/scripts/network.js --output /var/log/network.log --host ', variables('subnetPrivateAddress'), ' --port ', variables('bigIpMgmtPort'), ' -u admin --password-url file:///config/cloud/passwd --vlan name:external,nic:1.1 --vlan name:internal,nic:1.2 --self-ip name:self_2nic,address:', variables('extSubnetPrivateAddress'), ',vlan:external --self-ip name:self_3nic,address:', variables('intSubnetPrivateAdress'), ',vlan:internal --log-level debug; rm -f /config/cloud/passwd')]"
                },
                "publisher": "Microsoft.Azure.Extensions",
                "settings": {
                    "fileUris": [
                        "[concat('https://raw.githubusercontent.com/F5Networks/f5-cloud-libs/', variables('f5CloudLibsTag'), '/dist/f5-cloud-libs.tar.gz')]"
                    ]
                },
                "type": "CustomScript",
                "typeHandlerVersion": "2.0"
            },
            "tags": {
                "application": "[parameters('tagValues').application]",
                "costCenter": "[parameters('tagValues').cost]",
                "environment": "[parameters('tagValues').environment]",
                "group": "[parameters('tagValues').group]",
                "owner": "[parameters('tagValues').owner]"
            },
            "type": "Microsoft.Compute/virtualMachines/extensions"
        }
    ],
    "outputs": {
        "GUI-URL": {
            "type": "string",
            "value": "[concat('https://', variables('dnsLabel'), '.', resourceGroup().location, '.cloudapp.azure.com', ':', variables('bigIpMgmtPort'))]"
        },
        "SSH-URL": {
            "type": "string",
            "value": "[concat(variables('dnsLabel'), '.', resourceGroup().location, '.cloudapp.azure.com', ' ',22)]"
        }
    }
}
